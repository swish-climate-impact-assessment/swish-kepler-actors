using System;
using System.Collections.Generic;
using System.IO;
using Swish.IO;
using Swish.Stata;

namespace Swish.Tests
{
	public class StataFunctionsTests
	{
		public void StataBatchMode()
		{
			/// this tests that I can run stata in batch mode using the /b command argument 
			/// the test works by checking that an out put file is generated by running do script
			/// 

			string inputFile = GenerateTestData.GenerateMeanInputFile();

			string outputFile = FileFunctions.TempoaryOutputFileName(SwishFunctions.CsvFileExtension);
			if (FileFunctions.FileExists(outputFile))
			{
				File.Delete(outputFile);
			}

			List<string> lines = new List<string>();
			StataScriptFunctions.LoadFileCommand(lines, inputFile);

			lines.Add("collapse (mean) head4_mean=head4");
			StataScriptFunctions.SaveFileCommand(lines, outputFile);

			string doFileName = FileFunctions.TempoaryOutputFileName(SwishFunctions.DoFileExtension);
			File.WriteAllLines(doFileName, lines.ToArray());

			string arguments = StataFunctions.BatchArgument + "\"" + doFileName + "\"";

			// there is also the log to deal with
			string workingDirectory = Path.GetDirectoryName(doFileName);

			string stataExecutable = StataFunctions.ExecutablePath;
			ProcessFunctions.Run(stataExecutable, arguments, workingDirectory, false, TimeSpan.Zero, false, false, false);

			if (!FileFunctions.FileExists(outputFile))
			{
				throw new TestException();
			}
		}


		public void ReturnLog()
		{
			List<string> lines = new List<string>();
			lines.Add("Bad command");
			string log = StataFunctions.RunScript(lines, false);
			if (!log.Contains("unrecognized command"))
			{
				throw new TestException();
			}
		}

		public void Stata12FileName()
		{
			string expected = @"C:\Program Files (x86)\Stata12\StataSE-64.exe";
			string stataExecutable = StataFunctions.ExecutablePath;
			if (Path.GetFullPath(expected) != Path.GetFullPath(stataExecutable))
			{
				throw new TestException();
			}
		}



	}
}


